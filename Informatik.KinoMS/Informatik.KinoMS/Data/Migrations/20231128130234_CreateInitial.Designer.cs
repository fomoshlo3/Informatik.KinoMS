// <auto-generated />
using System;
using Informatik.KinoMS.Data.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Informatik.KinoMS.Data.Migrations
{
    [DbContext(typeof(CinemaDbContext))]
    [Migration("20231128130234_CreateInitial")]
    partial class CreateInitial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Informatik.KinoMS.Data.Entities.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ScreeningId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ScreeningId");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("Informatik.KinoMS.Data.Entities.CinemaHall", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ScreeningId")
                        .HasColumnType("int");

                    b.Property<int>("SeatsCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Halls");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ScreeningId = 0,
                            SeatsCount = 340
                        },
                        new
                        {
                            Id = 2,
                            ScreeningId = 0,
                            SeatsCount = 280
                        },
                        new
                        {
                            Id = 3,
                            ScreeningId = 0,
                            SeatsCount = 280
                        },
                        new
                        {
                            Id = 4,
                            ScreeningId = 0,
                            SeatsCount = 180
                        },
                        new
                        {
                            Id = 5,
                            ScreeningId = 0,
                            SeatsCount = 340
                        },
                        new
                        {
                            Id = 6,
                            ScreeningId = 0,
                            SeatsCount = 180
                        });
                });

            modelBuilder.Entity("Informatik.KinoMS.Data.Entities.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("Length")
                        .HasColumnType("time");

                    b.Property<int>("PCA")
                        .HasColumnType("int");

                    b.Property<string>("PublishedDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Richtig Lahmer Method-Acting Film",
                            Length = new TimeSpan(0, 1, 30, 0, 0),
                            PCA = 12,
                            PublishedDate = "1975",
                            Title = "Einer flog über das Kuckucksnest"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Bewegendes Drama über den Holocaust",
                            Length = new TimeSpan(0, 3, 15, 0, 0),
                            PCA = 16,
                            PublishedDate = "1993",
                            Title = "Schindlers Liste"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Verwirrend genialer Science-Fiction-Thriller",
                            Length = new TimeSpan(0, 2, 28, 0, 0),
                            PCA = 16,
                            PublishedDate = "2010",
                            Title = "Inception"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Bewegendes Drama über den Holocaust",
                            Length = new TimeSpan(0, 3, 15, 0, 0),
                            PCA = 16,
                            PublishedDate = "1993",
                            Title = "Schindlers Liste"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Ein Klassiker des Mafiafilms",
                            Length = new TimeSpan(0, 2, 55, 0, 0),
                            PCA = 18,
                            PublishedDate = "1972",
                            Title = "Der Pate"
                        },
                        new
                        {
                            Id = 6,
                            Description = "Epische Reise eines einfachen Mannes",
                            Length = new TimeSpan(0, 2, 22, 0, 0),
                            PCA = 12,
                            PublishedDate = "1994",
                            Title = "Forrest Gump"
                        },
                        new
                        {
                            Id = 7,
                            Description = "Epos über die Reise eines Hobbits",
                            Length = new TimeSpan(0, 2, 58, 0, 0),
                            PCA = 12,
                            PublishedDate = "2001",
                            Title = "Der Herr der Ringe: Die Gefährten"
                        });
                });

            modelBuilder.Entity("Informatik.KinoMS.Data.Entities.Screening", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<TimeOnly>("EndTime")
                        .HasColumnType("time");

                    b.Property<int>("HallId")
                        .HasColumnType("int");

                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.Property<TimeOnly>("StartTime")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.HasIndex("HallId");

                    b.HasIndex("MovieId");

                    b.ToTable("Screenings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateOnly(2023, 11, 28),
                            EndTime = new TimeOnly(0, 0, 0),
                            HallId = 1,
                            MovieId = 1,
                            StartTime = new TimeOnly(15, 0, 0)
                        },
                        new
                        {
                            Id = 2,
                            Date = new DateOnly(2023, 11, 28),
                            EndTime = new TimeOnly(0, 0, 0),
                            HallId = 2,
                            MovieId = 2,
                            StartTime = new TimeOnly(15, 0, 0)
                        },
                        new
                        {
                            Id = 3,
                            Date = new DateOnly(2023, 11, 28),
                            EndTime = new TimeOnly(0, 0, 0),
                            HallId = 3,
                            MovieId = 3,
                            StartTime = new TimeOnly(15, 0, 0)
                        },
                        new
                        {
                            Id = 4,
                            Date = new DateOnly(2023, 11, 28),
                            EndTime = new TimeOnly(0, 0, 0),
                            HallId = 4,
                            MovieId = 4,
                            StartTime = new TimeOnly(15, 0, 0)
                        },
                        new
                        {
                            Id = 5,
                            Date = new DateOnly(2023, 11, 28),
                            EndTime = new TimeOnly(0, 0, 0),
                            HallId = 5,
                            MovieId = 5,
                            StartTime = new TimeOnly(15, 0, 0)
                        },
                        new
                        {
                            Id = 6,
                            Date = new DateOnly(2023, 11, 28),
                            EndTime = new TimeOnly(0, 0, 0),
                            HallId = 1,
                            MovieId = 6,
                            StartTime = new TimeOnly(19, 0, 0)
                        },
                        new
                        {
                            Id = 7,
                            Date = new DateOnly(2023, 11, 28),
                            EndTime = new TimeOnly(0, 0, 0),
                            HallId = 2,
                            MovieId = 7,
                            StartTime = new TimeOnly(19, 0, 0)
                        },
                        new
                        {
                            Id = 8,
                            Date = new DateOnly(2023, 11, 28),
                            EndTime = new TimeOnly(0, 0, 0),
                            HallId = 3,
                            MovieId = 7,
                            StartTime = new TimeOnly(19, 0, 0)
                        },
                        new
                        {
                            Id = 9,
                            Date = new DateOnly(2023, 11, 28),
                            EndTime = new TimeOnly(0, 0, 0),
                            HallId = 4,
                            MovieId = 7,
                            StartTime = new TimeOnly(19, 0, 0)
                        },
                        new
                        {
                            Id = 10,
                            Date = new DateOnly(2023, 11, 28),
                            EndTime = new TimeOnly(0, 0, 0),
                            HallId = 5,
                            MovieId = 7,
                            StartTime = new TimeOnly(19, 0, 0)
                        });
                });

            modelBuilder.Entity("Informatik.KinoMS.Data.Entities.Booking", b =>
                {
                    b.HasOne("Informatik.KinoMS.Data.Entities.Screening", "Screening")
                        .WithMany()
                        .HasForeignKey("ScreeningId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Screening");
                });

            modelBuilder.Entity("Informatik.KinoMS.Data.Entities.Screening", b =>
                {
                    b.HasOne("Informatik.KinoMS.Data.Entities.CinemaHall", "Hall")
                        .WithMany("Screenings")
                        .HasForeignKey("HallId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Informatik.KinoMS.Data.Entities.Movie", "Movie")
                        .WithMany("Screenings")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hall");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("Informatik.KinoMS.Data.Entities.CinemaHall", b =>
                {
                    b.Navigation("Screenings");
                });

            modelBuilder.Entity("Informatik.KinoMS.Data.Entities.Movie", b =>
                {
                    b.Navigation("Screenings");
                });
#pragma warning restore 612, 618
        }
    }
}
